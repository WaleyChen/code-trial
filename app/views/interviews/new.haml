<script type="text/javascript">

var token = "#{ @token }";

$( document ).ready(function() {
Twilio.Device.setup(token, {debug: true});

Twilio.Device.ready(function (device) {
$("#log").text("Ready");
});

Twilio.Device.error(function (error) {
$("#log").text("Error: " + error.message);
});

Twilio.Device.connect(function (conn) {
$("#log").text("Successfully established call");
});

Twilio.Device.disconnect(function (conn) {
$("#log").text("Call ended");
});

function call() {
Twilio.Device.connect();
}

function hangup() {
Twilio.Device.disconnectAll();
}

function startBtnClick() {
if ($("#start-btn").text() == "Start") {
call();

$("#start-btn").text("Finish");
$("#start-btn").removeClass("btn-success");
$("#start-btn").addClass("btn-danger");
} else {
hangup();
$("#submit-btn").click();
}
}

window.call = call;
window.startBtnClick = startBtnClick;
});
</script>

.container
  = form_for @interview do |f|
    .row
      .span12
        .well
          = f.text_field :name, :placeholder => 'Name'
    .row
      .span12
        .well
          %h1 PROBLEM GOES HERE
    .row
      .span8
        .well
          = f.text_area(:codearea, { value: "alert('hello');", autofocus: "true", id: 'codearea', rows: 10, cols: 20, class: 'poll-target' })
          .pull-right{style: "margin-top:15px;"}
            #start-btn.btn.btn-stylish.btn-large.btn-success{ type: "submit", style: "width:70px;", onClick: "startBtnClick();" } Start
            .hidden
              = f.submit :id => "submit-btn"
          .clearfix
      .span4
        .well
          %h1 CODE STATUS
          .alert.alert-error
            %strong Error!
            Your code sucks.
            Failed on test case #8.

:javascript
  $(function() {
    CodeMirror.fromTextArea($('#codearea').get(0), {
    theme: "monokai",
    mode: "ruby"
  });

    /* START RECORDING KEYSTROKES */
    // Detect when to start polling
    $('.poll-target').bind('input propertychange', function() {
      if (first_time == 0) {
        start_recording();
      }
      first_time = 1;
    });

    function start_recording() { timer = setInterval(polling_text, polling_interval); }

    // Saving the polled text
    function polling_text() {
      var text = $('.poll-target').val();
      var last = log[log.length-1];
      if (text != last) {
        log.push(text);
        times.push(counter);
      }
      counter++;
    }
    
    // Replay the logged
    $('.poll-replay').click(function() {
      times.reverse();
      log.reverse();
      clearInterval(timer);
      $('.poll-target2').val('');

      var replay_text;
      var counter2=0;

      function replay() {
        $('.poll-target2').val(replay_text);
        if (times.length > 0 && counter2 == times[times.length-1]) {
          // times[times.length-1]
          times.pop();
          replay_text = log.pop();
        }
        counter2++;
      }
      setInterval(replay, polling_interval);
    });
    /* END RECORDING KEYSTROKES */

  });
