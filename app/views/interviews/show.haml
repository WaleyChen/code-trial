.container
  #slider
  %audio{:controls => "controls", :id => "recording"}
    %source{:src => @interview.voice, :type => "audio/mpeg"}
  = link_to "PLAY", "", { :id => "play-stop-btn", :class => "btn btn-success" }
  %h3 Transcription
  = @interview.transcription

  .hidden
    %textarea#code_changes
      = @interview.code_changes
  .hidden
    %textarea#code_timestamps
      = @interview.code_timestamps

  %input#poll-replay{type:"button", value:"Replay"}
  %textarea{ autofocus:"true", id:'codearea', rows:10, cols:20, class: 'poll-replay-target' }
    = "Click the button to see what the interviewee wrote"

:coffeescript
$(document).ready ->
  console.log($('#codearea').val())
  cm = CodeMirror.fromTextArea(
    $('#codearea').get(0),
    {
      theme: "monokai"
      mode: "ruby"
      readOnly: true
    })
  console.log('hi')

  polling_interval = 3

  log = $('#code_changes').text()
  log = $.parseJSON(log)
  times = $('#code_timestamps').text()
  times = $.parseJSON(times)

  log.shift()
  times.shift()

  offset = times[0]
  console.log('OFFSET')
  console.log(offset)

  `for (var i=0; i<times.length; i++) {
    times[i] = times[i] - offset
  }`
  console.log(log)
  console.log(times)

  counter = 0
  idx = 0
  $('#poll-replay').click( ->
    $('.poll-replay-target').val('')

    replay_text = ''

    replay = ->
      console.log('reverse')
      # $('.poll-replay-target').val(replay_text)
      cm.setValue(replay_text)
      if (times.length > 0 && counter == times[idx])
        replay_text = log[idx]
        idx++
        $('.poll-replay-target').focus()
      counter++

    setInterval(replay, polling_interval)
  )

  window.setCodeReplayTime = (time) ->
    alert "fweif"
    counter = time/3
    idx = nextIdx(counter)
    cm.setValue(log[idx-1])
    alert idx

  nextIdx = (cnt) ->
    i = 0
    for c in times
      if c <= cnt
        i++
      else
        return i
